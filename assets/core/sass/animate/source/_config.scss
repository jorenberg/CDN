// Animate.cssÂ®, Default Configurations.
// -------------------------------------
// Sass - (3.4.21): Selective Steve
// Compass - (v1.0.3): Polaris
// -------------------------------------
// ---------------------------------- //
//        Using @mixin directive      //
//       @author : Prabhat Kumar      //
//        @date  : 16-April-2016      //
// ---------------------------------- //

// ==========================================
// A. Mixin helper to output vendor prefixes.
// ==========================================
// @param {String} $property - Unprefixed CSS property
// @param {*} $value - Raw CSS value
// @param {List} $prefixes - List of prefixes to output
@mixin prefix($property, $value, $prefixes: ()) {
  @each $prefix in $prefixes {
    -#{$prefix}-#{$property}: $value;
  }
  #{$property}: $value;
}

// ==========================================
// B. The @function directive to strip unit.
// ==========================================
@function strip-unit($value) {
  @return $value / ($value * 0 + 1);
}

// ============================================
// C. A smart cache @mixin directive.
//    @author : Prabhat Kumar
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
// Global cache map.
$cache: ();

// Cache mixin.
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@mixin cache($declarations) {
  // Looping through all properties/values from map.
  @each $property, $value in $declarations {
    // Get the stored values for the current property.
    $stored-values: map-get($cache, $property);
    // If the value doesn't exist in stored values.
    @if not index($stored-values, $value) {
      // Add it.
      $cache: map-merge($cache, ($property: append($stored-values or (), $value))) !global;
      // And create a placeholder at root level.
      @at-root %#{$property}-#{length(map-get($cache, $property))} {
        #{$property}: $value;
      }
    }
    // Extend the placeholder.
    @extend %#{$property}-#{index(map-get($cache, $property), $value)};
  }
}

// ==========================================
// D. The @mixin directive for Animations.
// ==========================================
// The animation CSS property makes possible to animate transitions from one CSS style configuration to another.
// Properties Value:-
// D-1. animation - a shorthand property for below - "all".
// D-2. animation-name
// D-3. animation-duration
// D-4. animation-timing-function
// D-5. animation-delay
// D-6. animation-iteration-count
// D-7. animation-direction
// D-8. animation-fill-mode
// D-9. animation-play-state

// D-1.
@mixin animation($animation) {
  -webkit-animation: $animation;
     -moz-animation: $animation;
      -ms-animation: $animation;
       -o-animation: $animation;
          animation: $animation;
}
// D-2.
@mixin animation-name($name) {
  -webkit-animation-name: $name;
     -moz-animation-name: $name;
      -ms-animation-name: $name;
       -o-animation-name: $name;
          animation-name: $name;
}
// D-3.
@mixin animation-duration($duration) {
  -webkit-animation-duration: $duration;
     -moz-animation-duration: $duration;
      -ms-animation-duration: $duration;
       -o-animation-duration: $duration;
          animation-duration: $duration;
}
// D-4.
@mixin animation-timing-function($timing-function) {
  -webkit-animation-timing-function: $timing-function;
     -moz-animation-timing-function: $timing-function;
      -ms-animation-timing-function: $timing-function;
       -o-animation-timing-function: $timing-function;
          animation-timing-function: $timing-function;
}
// D-5.
@mixin animation-delay($delay) {
  -webkit-animation-delay: $delay;
     -moz-animation-delay: $delay;
      -ms-animation-delay: $delay;
       -o-animation-delay: $delay;
          animation-delay: $delay;
}
// D-6.
@mixin animation-iteration-count($iteration-count) {
  -webkit-animation-iteration-count: $iteration-count;
     -moz-animation-iteration-count: $iteration-count;
      -ms-animation-iteration-count: $iteration-count;
       -o-animation-iteration-count: $iteration-count;
          animation-iteration-count: $iteration-count;
}
// D-7.
@mixin animation-direction($direction) {
  -webkit-animation-direction: $direction;
     -moz-animation-direction: $direction;
      -ms-animation-direction: $direction;
       -o-animation-direction: $direction;
          animation-direction: $direction;
}
// D-8.
@mixin animation-fill-mode($fill-mode) {
  -webkit-animation-fill-mode: $fill-mode;
     -moz-animation-fill-mode: $fill-mode;
      -ms-animation-fill-mode: $fill-mode;
       -o-animation-fill-mode: $fill-mode;
          animation-fill-mode: $fill-mode;
}
// D-9. values: running || paused ==//EOF//==

// ==========================================
// E. The @mixin directive for Transitions.
// ==========================================
// The transition CSS property can enables to define the transition between two states of an element.
// Different states may be defined using pseudo-classes like :hover or :active or dynamically set using JavaScript.
// E-1. transition - a shorthand property for below - "all".
// E-2. transition-property
// E-3. transition-delay
// E-4. transition-duration
// E-5. transition-timing-function

// E-1.
@mixin transition($transition...) {
  -webkit-transition: $transition;
     -moz-transition: $transition;
      -ms-transition: $transition;
       -o-transition: $transition;
          transition: $transition;
}
// E-2.
@mixin transition-property($transition-property...) {
  -webkit-transition-property: $transition-property;
     -moz-transition-property: $transition-property;
      -ms-transition-property: $transition-property;
       -o-transition-property: $transition-property;
          transition-property: $transition-property;
}
// E-3.
@mixin transition-delay($transition-delay) {
  -webkit-transition-delay: $transition-delay;
     -moz-transition-delay: $transition-delay;
      -ms-transition-delay: $transition-delay;
       -o-transition-delay: $transition-delay;
          transition-delay: $transition-delay;
}
// E-4.
@mixin transition-duration($transition-duration...) {
  -webkit-transition-duration: $transition-duration;
     -moz-transition-duration: $transition-duration;
      -ms-transition-duration: $transition-duration;
       -o-transition-duration: $transition-duration;
          transition-duration: $transition-duration;
}
// E-5.
@mixin transition-timing-function($timing-function) {
  -webkit-transition-timing-function: $timing-function;
     -moz-transition-timing-function: $timing-function;
      -ms-transition-timing-function: $timing-function;
       -o-transition-timing-function: $timing-function;
          transition-timing-function: $timing-function;
}
